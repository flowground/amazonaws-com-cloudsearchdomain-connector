{
    "title": "Amazon CloudSearch Domain",
    "description": "You use the AmazonCloudSearch2013 API to upload documents to a search domain and\nsearch those documents. \n\nThe endpoints for submitting UploadDocuments, Search, and Suggest requests are\ndomain-specific. To get the endpoints for your domain, use the Amazon\nCloudSearch configuration service DescribeDomains action. The domain endpoints\nare also displayed on the domain dashboard in the Amazon CloudSearch console.\nYou submit suggest requests to the search endpoint. \n\nFor more information, see the Amazon CloudSearch Developer Guide\n[http://docs.aws.amazon.com/cloudsearch/latest/developerguide].",
    "docsUrl": "https://aws.amazon.com/cloudsearchdomain/",
    "url": "https://api.apis.guru/v2/specs/amazonaws.com/cloudsearchdomain/2013-01-01/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://cloudsearchdomain.amazonaws.com/",
                    "http://cloudsearchdomain.amazonaws.com/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "auth_hmac": {
                "label": "Authorization (hmac)",
                "viewClass": "TextFieldView",
                "note": "Amazon Signature authorization v4"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "UploadDocuments": {
            "main": "./lib/actions/UploadDocuments.js",
            "title": "UploadDocuments",
            "description": "Posts a batch of documents to a search domain for indexing. A document batch is\na collection of add and delete operations that represent the documents you want\nto add, update, or delete from your domain. Batches can be described in either\nJSON or XML. Each item that you want Amazon CloudSearch to return as a search\nresult (such as a product) is represented as a document. Every document has a\nunique ID and one or more fields that contain the data that you want to search\nand return in results. Individual documents cannot contain more than 1 MB of\ndata. The entire batch cannot exceed 5 MB. To get the best possible upload\nperformance, group add and delete operations in batches that are close the 5 MB\nlimit. Submitting a large volume of single-document batches can overload a\ndomain's document service. \n\nThe endpoint for submitting UploadDocuments requests is domain-specific. To get\nthe document endpoint for your domain, use the Amazon CloudSearch configuration\nservice DescribeDomains action. A domain's endpoints are also displayed on the\ndomain dashboard in the Amazon CloudSearch console. \n\nFor more information about formatting your data for Amazon CloudSearch, see \nPreparing Your Data\n[http://docs.aws.amazon.com/cloudsearch/latest/developerguide/preparing-data.html] \nin the Amazon CloudSearch Developer Guide. For more information about uploading\ndata for indexing, see Uploading Data\n[http://docs.aws.amazon.com/cloudsearch/latest/developerguide/uploading-data.html] \nin the Amazon CloudSearch Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UploadDocuments.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Search": {
            "main": "./lib/actions/Search.js",
            "title": "Search",
            "description": "Retrieves a list of documents that match the specified search criteria. How you\nspecify the search criteria depends on which query parser you use. Amazon\nCloudSearch supports four query parsers:\n\n * simple: search all text and text-array fields for the specified string.\n   Search for phrases, individual terms, and prefixes. \n * structured: search specific fields, construct compound queries using Boolean\n   operators, and use advanced features such as term boosting and proximity\n   searching.\n * lucene: specify search criteria using the Apache Lucene query parser syntax.\n * dismax: specify search criteria using the simplified subset of the Apache\n   Lucene query parser syntax defined by the DisMax query parser.\n\nFor more information, see Searching Your Data\n[http://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching.html] in\nthe Amazon CloudSearch Developer Guide.\n\nThe endpoint for submitting Search requests is domain-specific. You submit\nsearch requests to a domain's search endpoint. To get the search endpoint for\nyour domain, use the Amazon CloudSearch configuration service DescribeDomains \naction. A domain's endpoints are also displayed on the domain dashboard in the\nAmazon CloudSearch console.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Search.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Suggest": {
            "main": "./lib/actions/Suggest.js",
            "title": "Suggest",
            "description": "Retrieves autocomplete suggestions for a partial query string. You can use\nsuggestions enable you to display likely matches before users finish typing. In\nAmazon CloudSearch, suggestions are based on the contents of a particular text\nfield. When you request suggestions, Amazon CloudSearch finds all of the\ndocuments whose values in the suggester field start with the specified query\nstring. The beginning of the field must match the query string to be considered\na match. \n\nFor more information about configuring suggesters and retrieving suggestions,\nsee Getting Suggestions\n[http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html] \nin the Amazon CloudSearch Developer Guide. \n\nThe endpoint for submitting Suggest requests is domain-specific. You submit\nsuggest requests to a domain's search endpoint. To get the search endpoint for\nyour domain, use the Amazon CloudSearch configuration service DescribeDomains \naction. A domain's endpoints are also displayed on the domain dashboard in the\nAmazon CloudSearch console.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Suggest.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}